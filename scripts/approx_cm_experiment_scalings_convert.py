import math

training_until=10

opt = False
simple_alpha=False
p_to_print = 3

def get_c_alpha(ll):
    
    if simple_alpha:
    
        nom=0.
        den=0.
        for (l, dim) in ll:
            nom += math.log2(l)*dim
            den += dim*dim

        return (0, nom/den)       

    else:

        sum_yi=0.
        sum_xi=0.
        sum_xi2=0.
        sum_xi_yi=0.
        
        for (l, dim) in ll:
            sum_yi += math.log2(l)
            sum_xi+=dim
            sum_xi2+=dim*dim
            sum_xi_yi+=math.log2(l)*dim

        a = (sum_yi*sum_xi2-sum_xi*sum_xi_yi)/(len(ll)*sum_xi2-sum_xi*sum_xi)
        b = (len(ll)*sum_xi_yi-sum_xi*sum_yi)/(len(ll)*sum_xi2-sum_xi*sum_xi)
    
    return (a,b)


if opt:
    pass
   
else:
        
    if p_to_print == 3:
        
        ms=[4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
        ys={"CMQAOA": [0.0693292716715608,0.0478684307863023,0.02503258715718,0.013010958675684,0.00756397051018621,0.00404356014344025,0.00291991858919842,0.00192547400383744,0.00101099447042996,0.000467167756089037,0.000309612904156142,0.000158459439530568,6.70735204985571e-05,4.89165529224329e-05,2.64208971469158e-05,1.7675640133377e-05,6.75079000732792e-06,2.97459837880133e-06,1.81140015937729e-06],
            "QAOA non_pen": [0.165984611064018,0.105151678820791,0.0649284904747558,0.0531402319921266,0.0300615103406024,0.0180973354668209,0.0193490097476256,0.00782804389346197,0.00465994676806367,0.00511659640271405,0.00197546403001666,0.0010626163639798,0.000953802779592921,0.000458528408198807,0.000233537762325203,0.000186498827705746,8.10705197331645e-05,5.73023784526785e-05,3.94192989995113e-05]}
        #ys={"CMQAOA": [(0.069329271671561, 0.052979587718531), (0.047868430786302, 0.037381545336635), (0.025032587157180, 0.023652483637020), (0.012698733015311, 0.010940024752456), (0.006938764219226, 0.007202205463881), (0.003528632980062, 0.004269744970614), (0.002098228447024, 0.002432489298470), (0.001306572466634, 0.001685594921208), (0.000613299263127, 0.000874995532098), (0.000257375431360, 0.000315848305735), (0.000192391958597, 0.000225554691590), (0.000088553454363, 0.000109583281228), (0.000035788810396, 0.000048610854314), (0.000030215802382, 0.000054175637054), (0.000015992320283, 0.000026017268467), (0.000012088429560, 0.000024324290072), (0.000003849468933, 0.000005873413040), (0.000001561551912, 0.000003257879576), (0.000001070103136, 0.000002432276325)],
        #"QAOA non_pen": [(0.165984611064018, 0.103768837666343, 0.196745594738953), (0.105151678820791, 0.064714759570353, 0.144119681591286), (0.064928490474756, 0.052455573454085, 0.105909961626852), (0.053090081987033, 0.026578494668051, 0.094097641558927), (0.027641755260166, 0.027323655950475, 0.048060309311660), (0.017790118199533, 0.012818029664219, 0.045322358799883), (0.015235089200585, 0.010007399483770, 0.033451629920618), (0.004107937945639, 0.005977631041668, 0.006479939708259), (0.002438562043816, 0.002749551396777, 0.005775909704824), (0.002580992113209, 0.001469626212947, 0.006841013976825), (0.001015381168156, 0.001148065852912, 0.003404514419324), (0.000775562757545, 0.000953461338840, 0.002402792683741), (0.000633990577694, 0.000568355475683, 0.001673355576209), (0.000323446905075, 0.000178274417084, 0.000924768630572), (0.000169186701856, 0.000152563427306, 0.000534930844373), (0.000160533221516, 0.000152333374749, 0.000461628191583), (0.000074044101616, 0.000055401625546, 0.000231690351294), (0.000050112888975, 0.000049540481516, 0.000162475817974), (0.000035431019456, 0.000038859618948, 0.000153162666933)]}
        #"QAOA non_pen": [(0.144187548945931, 0.205776650322905, 0.149799236895733), (0.097258813288785, 0.087530128672345, 0.124550596506478), (0.061430394037958, 0.070272802037764, 0.095723698048930), (0.042900769901772, 0.046093016363267, 0.077460714454958), (0.033910929183005, 0.030511475261699, 0.060617737542168), (0.016871726477922, 0.016753076743209, 0.038251880943980), (0.012451566836280, 0.009629588788939, 0.023055982956569), (0.008449350064322, 0.006087534360585, 0.013465265231720), (0.004198457431587, 0.003437872049149, 0.006628348676897), (0.002922632314793, 0.003032379482225, 0.006505854017960), (0.001190636485697, 0.001076317424790, 0.002559756315242), (0.000608394305287, 0.000578949710062, 0.001536503892478), (0.000579729354476, 0.000479050971934, 0.001743512561851), (0.000212625236551, 0.000244467377980, 0.000642455792686), (0.000127437594968, 0.000118345804534, 0.000555855184636), (0.000052709678863, 0.000060767903843, 0.000098546444822), (0.000028664436393, 0.000042185656408, 0.000069068202294), (0.000046730118588, 0.000027308569659, 0.000157500755841), (0.000012988145655, 0.000013286778382, 0.000035126923270)]}
        #alphas={"CMQAOA": -0.895274, "QAOA non_pen": 0.695429}

cm_overlaps = []
qaoa_overlaps = []

print("x cm_overlap_sv qaoa_nonpen_overlap_sv alpha_line_cm alpha_line_qaoa fixed_used_in_training fixed_used_in_training2 alpha_cm alpha_qaoa")
for i in range(len(ms)):
    cm_overlap=ys["CMQAOA"][i]
    qaoa_overlap=ys["QAOA non_pen"][i]
    
    cm_overlaps.append((cm_overlap, ms[i]))
    qaoa_overlaps.append((qaoa_overlap, ms[i]))

line_cm=get_c_alpha(cm_overlaps)
line_qaoa=get_c_alpha(qaoa_overlaps)

for i in range(len(ms)):
    cm_overlap=ys["CMQAOA"][i]
    qaoa_overlap=ys["QAOA non_pen"][i]
    
    training2= 1
    training = 1
    if ms[i] > training_until:
        training = 0
    if ms[i] > training_until-1:
        training2 = 0
    
        
    print(ms[i], cm_overlap, qaoa_overlap, 2**(line_cm[0]+ms[i]*line_cm[1]), 2**(line_qaoa[0]+ms[i]*line_qaoa[1]), training, training2, round(line_cm[1],3), round(line_qaoa[1],3))
print(31, 0, 0, 2**(line_cm[0]+31*line_cm[1]), 2**(line_qaoa[0]+31*line_qaoa[1]), 0, 0, round(line_cm[1],3), round(line_qaoa[1],3))




    
